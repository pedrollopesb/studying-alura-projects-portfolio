/* Para importar as fontes, devemos inserir os links de importação no início do CSS */
@import url('https://fonts.googleapis.com/css2?family=Krona+One&family=Montserrat:wght@100..900&display=swap');

/* Através dessa pseudo-classe global, conseguimos definir variáveis como as cores, para que mudando neste seletor global, elas sejam alteradas no projeto inteiro, ao invés de mudar cada hexadecimal em cada trecho de código */
:root {
  --cor-primaria: #000000;
  --cor-secundaria: #F6F6F6;
  --cor-terciaria: #22D4FD;
  --cor-hover: #272727;
  --cor-hover-border: #F6F6F6;

  --fonte-primaria: "Krona One", sans-serif;
  --fonte-secundaria: "Montserrat", sans-serif;
}

/* Aqui criamos as variáveis, ou seja, declaramos neste local, atribuindo um valor a estas cores. Em cada seletor a seguir, ao invés de utilizar o hexadecimal, mencionaremos a variável. O mesmo se aplica para as fontes. */

/* Resetar o padrão que já vem nos navegadores, aplicando tais propriedades a todos os elementos da página */
* {
  margin: 0;
  padding: 0;
}

/* margin - margem externa / padding - espaçamento entre a borda e o conteúdo */

/* Para selecionar a tag "body", onde está todo o conteúdo principal da página */
body {
  /* height: 100vh; */
  box-sizing: border-box;
  background-color: var(--cor-primaria);
  color: var(--cor-secundaria);
}

/* height: 100vh; - A altura inicial da nossa tela está sendo definida para 100% da nossa viewport (ou seja, 100% da tela do nosso navegador) */
/* A propriedade acima foi desabilitada, pois conforme o projeto foi crescendo, começou a ultrapassar o tamanho de tela, sendo assim, para o footer ficar dentro do body, foi necessário desabilitar*/
/* box-sizing: border-box; - Irá garantir que o elemento filho seja contido no elemento pai, contabilizando as bordas e preenchimentos do elemento */

/* Para colocar os elementos lado a lado, como demanda o projeto, devemos utilizar uma classe no elemento maior (main) e chamá-la através do seletor de classe.*/

.cabecalho {
  padding: 2% 0% 0% 15%;
}

/* padding - primeiro superior, segundo direito, terceiro inferior, quarto esquerdo. É melhor deixar em porcentagem, pois dependendo o tamanho do monitor, será 2% do tamanho de tela, ao invés de um número x de pixels, que se o monitor for grande será pouca coisa e se o monitor for pequeno será muita coisa*/

.cabecalho__menu {
  display: flex;
  gap: 80px;
}

/* display: flex - Por padrão, por se tratar do elemento pai, ele coloca os elementos em sentido de linha - horizontal (row) */
/* gap: 80px - ele irá definir o espaçamento entre os elementos filhos, que neste caso é de 80px, conforme o projeto do figma */

.cabecalho__menu__link {
  font-family: var(--fonte-secundaria);
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--cor-terciaria);
  text-decoration: none;
}

/* text-decoration: none; - utilizado para remover qualquer estilização, como o sublinhado do link */

.cabecalho__menu__link:hover {
  color: var(--cor-secundaria);
}

.apresentacao {
  padding: 5% 15%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 82px;
}

/* padding: Será necessário atribuir uma margem para tirar os elementos das extremidades das telas, com valor de 5% na vertical e 15% da horizontal para se aproximar do projeto do figma */
/* display: flex - Por padrão, por se tratar do elemento pai, ele coloca os elementos em sentido de linha - horizontal (row), mas pode colocá-lo como coluna, por exemplo */
/* align-items: center - Para fazer o alinhamento vertical dos elementos (filhos) no centro da box (em relação ao elemento pai - main). Essa propriedade irá alinhar os elementos em relação ao maior destes elementos (como uma imagem), que irá definir o ponto central de alinhamento dos demais elementos */
/* justify-content: space-between - Neste caso, cada elemento filho será jogado para uma extremidade do container e atribuirá um espaço entre eles */
/* gap: 82px; - estabelecerá uma distância definida no projeto figma entre os elementos filhos da tag main */

.apresentacao__conteudo {
  width: 50%;
  display: flex;
  flex-direction: column;
  gap: 40px;
}

/* width: 615px - largura do elemento baseado no projeto do figma (valores extraídos de lá e utilizados em pixels - px) - alterado para 50% (responsividade) */
/* display: flex - Por padrão, por se tratar do elemento pai, ele coloca os elementos em sentido de linha - horizontal (row), mas pode colocá-lo como coluna, por exemplo */
/* flex-direction: column; - ele muda o sentido dos elementos de linha para coluna, para poder determinar o espaçamento entre eles*/
/* gap: 40px - ele irá definir o espaçamento entre os elementos filhos, que neste caso é de 40px, conforme o projeto do figma */

.apresentacao__conteudo__titulo {
  font-size: 2.25rem;
  font-family: var(--fonte-primaria);
}

/* font-size: 36px - definirá o tamanho da fonte baseado no projeto do figma - alterado para 2.25rem (responsividade)*/
/* font-family: "Krona One", sans-serif; - irá importar a fonte que habilitamos no início do CSS a partir do Google Fonts */

/* Para selecionar uma classe, ela deve vir antecedida por um ponto */
.titulo-destaque {
  color: var(--cor-terciaria);
}

.apresentacao__conteudo__texto a {
  text-decoration: none;
  color: var(--cor-terciaria);
}

/* text-decoration: none; - irá remover as propriedades (como o subilinhado do link) */
/* color: irá atribuir uma cor a tag em questão */

.apresentacao__conteudo__texto {
  font-size: 1.5rem;
  font-family: var(--fonte-secundaria);
}

/* font-size: 24px - definirá o tamanho da fonte baseado no projeto do figma - alterado para 1.5rem (responsividade)*/
/* font-family: "Montserrat", sans-serif; - irá importar a fonte que habilitamos no início do CSS a partir do Google Fonts */

.apresentacao__links {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 32px;
}

/* display: flex - Por padrão, por se tratar do elemento pai, ele coloca os elementos em sentido de linha - horizontal (row), mas pode colocá-lo como coluna, por exemplo */
/* flex-direction: column; - ele muda o sentido dos elementos de linha para coluna, para poder determinar o espaçamento entre eles*/
/* justify-content: space-between - Neste caso, cada elemento filho será jogado para uma extremidade do container e atribuirá um espaço entre eles */
/* align-items: center - Para fazer o alinhamento vertical dos elementos (filhos) no centro da box (em relação ao elemento pai - div).*/
/* gap: 32px - ele irá definir o espaçamento entre os elementos filhos, que neste caso é de 32px, conforme o projeto do figma */

.apresentacao__links__subtitulo {
  font-family: var(--fonte-primaria);
  font-weight: 400;
  font-size: 1.5rem;
}

/* font-family: "Krona-One", sans-serif; - irá importar a fonte que habilitamos no início do CSS a partir do Google Fonts */
/* font-weight: 400; - definirá o peso da fonte baseado no projeto do figma*/
/* font-size: 24px - definirá o tamanho da fonte baseado no projeto do figma - alterado para 1.5rem (responsividade) */

.apresentacao__links__navegacao {
  /* background-color: #22D4FD; */
  display: flex;
  justify-content: center;
  gap: 16px;
  border: 2px solid var(--cor-terciaria);
  width: 50%;
  text-align: center;
  border-radius: 8px;
  font-size: 1.5rem;
  font-weight: 600;
  padding: 21.5px 0;
  text-decoration: none;
  color: var(--cor-secundaria);
  font-family: var(--fonte-secundaria);
}

/* display: flex - Por padrão, por se tratar do elemento pai, ele coloca os elementos em sentido de linha - horizontal (row) */
/* justify-content: center - Neste caso, cada elemento filho será jogado para o centro */
/* gap: 16px - ele irá definir o espaçamento entre os elementos filhos, que neste caso é de 16px, conforme o projeto do figma */
/* background-color: #22D4FD - propriedade e valor hexadecimal extraídos do projeto do figma*/
/* border: 2px solid #22D4FD; - define a borda do botão, com espessura 2px, sólida, e com a cor definida em projeto*/
/* width: 280px - largura do elemento baseado no projeto do figma (valores extraídos de lá e utilizados em pixels - px) - alterado para 50% (responsividade) */
/* text-align: center - alinhamento do texto no meio do elemento */
/* border-radius: 16px; - arredondamento da borda, com valores extraídos do figma */
/* font-size: 24px - definirá o tamanho da fonte baseado no projeto do figma*/
/* font-weight: 600; - definirá o peso da fonte baseado no projeto do figma*/
/* padding: 21.5px 0; - para verificar o valor do padding no figma, você deve selecionar o conteúdo e apertar a tecla ALT, assim mostrará os valores de padding para aquele conteúdo em relação a margem. Quando você quer definir o padding na vertical e horizontal, devemos saber que o primeiro valor é para o padding vertical e o segundo valor, horizontal. Como no projeto só estamos buscando o vertical, então preenchemos somente o primeiro campo, deixando o segundo zerado. */
/* text-decoration: none; - para remover qualquer decoração do texto por padrão, como o sublinhado do link de redirecionamento */
/* color: #000000; - definindo a cor da fonte conforme o projeto figma */
/* font-family: "Montserrat", sans-serif; - irá importar a fonte que habilitamos no início do CSS a partir do Google Fonts */

/* Para adicionar o efeito de sombreamento, quando passa o mouse por cima do ícone/botão */
.apresentacao__links__navegacao:hover {
  background-color: var(--cor-hover);
  border: 2px solid var(--cor-hover-border);
}

/* background-color: #272727 - irá mudar o background do botão quando passar o mouse por cima */
/* border: 2px solid #F6F6F6; - irá mudar a borda do botão quando passar o mouse por cima*/

.apresentacao__imagem {
  width: 50%;
}

/* width: 50% - alterando a largura, a imagem altera proporcionalmente a altura (responsividade) para redimensionar conforme o tamanho da tela do usuário */

.rodape {
  padding: 24px;
  color: var(--cor-primaria);
  background-color: var(--cor-terciaria);
  text-align: center;
  font-family: var(--fonte-secundaria);
  font-size: 1.5rem;
  font-weight: 400;
}

/* padding: 24px; - espaçamento entre a borda e o conteúdo do texto */
/* text-align: center - alinhamento do texto no meio do elemento */

/* Tudo o que colocarmos de classes aqui dentro, irá ser aplicado somente se a condição for verdadeira, ou seja, a largura de tela for no máximo 1200px */
@media (max-width: 1200px) {
  .cabecalho {
    padding: 10%;
  }

  /* padding: 10% - irá definir o espaçamento entre a borda e o conteúdo do texto do header */

  .cabecalho__menu {
    justify-content: center;
  }

  /* justify-content: center; - irá efetuar o alinhamento dos elementos (âncoras) no centro da tela */

  .apresentacao {
    flex-direction: column-reverse;
    padding: 5%;
  }

  /* flex-direction: column-reverse; - irá definir a disposição do flexbox para coluna, respeitando o modelo do figma e também jogando a imagem para cima do texto (através do valor -reverse) */
  /* padding: 5%; - para ajustar a distancia do elemento a borda, para o texto preencher melhor o espaço */

  .apresentacao__conteudo {
    width: auto;
  }

  /* width: auto; - propriedade que define que você tem determinado espaço de largura e precisa ocupá-lo como um todo */
}